Description : 
	You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N. Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:
Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.

Title :
	Binary Tree Nodes

DDL
CREATE TABLE BST (  N INT,  P INT);
INSERT INTO BST (N, P) VALUES (5, NULL);
INSERT INTO BST (N, P) VALUES (3, 5);
INSERT INTO BST (N, P) VALUES (8, 5);
INSERT INTO BST (N, P) VALUES (2, 3);
INSERT INTO BST (N, P) VALUES (4, 3);
INSERT INTO BST (N, P) VALUES (6, 8);
INSERT INTO BST (N, P) VALUES (9, 8);

Output :
select N, case when p is NULL then 'Root'  when (select count(*) from bst where p = a.n) >0 then 'Inner'    else 'Leaf'    end    from BST a    order by n;