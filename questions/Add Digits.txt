Description
	Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.

Title:
	Add Digits

Template Java,Python,Cpp

class Solution {
    public static int addDigits(int num) {
        //Write Code here
		
    }
	public static void main(String ar[])
	{
		System.out.print(addDigits(Integer.parseInt(ar[0])));
	}
}

#include <iostream>
using namespace std;
int addDigits(int num) {
	//Write Code here
}
int main()
{
	int n;
	cin>>n;
	cout<<addDigits(n);
}

def addDigits(num: int) -> int:
    #Write Code here    

print(addDigits(int(input())))

testcase :

1.

38
2

2.
123
6

3.
9875
2

4.
0
0

5.
11111
5

6.
987654321
9

7.
123987
2


solution 

class Solution {
    public static int addDigits(int num) {
        if(num == 0) return 0;
        else if(num % 9 == 0) return 9;
        else return num % 9;
		
    }
	public static void main(String ar[])
	{
		System.out.print(addDigits(Integer.parseInt(ar[0])));
	}
}

#include <iostream>
using namespace std;
int addDigits(int num) {
	if(num == 0) return 0;
        else if(num % 9 == 0) return 9;
        else return num % 9;
}
int main()
{
	int n;
	cin>>n;
	cout<<addDigits(n);
}

def addDigits(num: int) -> int:
    if num == 0 : return 0
    if num % 9 == 0 : return 9
    else : return (num % 9) 

print(addDigits(int(input())))
